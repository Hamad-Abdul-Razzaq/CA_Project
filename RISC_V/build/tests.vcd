$date
	Tue May 03 04:04:51 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var reg 1 ! dclk $end
$var reg 1 " dreset $end
$scope module r1 $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 64 # write_data [63:0] $end
$var wire 64 $ shifted_imm_data [63:0] $end
$var wire 5 % rs2 [4:0] $end
$var wire 5 & rs1 [4:0] $end
$var wire 64 ' readdata2 [63:0] $end
$var wire 64 ( readdata1 [63:0] $end
$var wire 5 ) rd [4:0] $end
$var wire 7 * opcode [6:0] $end
$var wire 64 + mux_1_out [63:0] $end
$var wire 64 , imm_data [63:0] $end
$var wire 7 - funct7 [6:0] $end
$var wire 3 . funct3 [2:0] $end
$var wire 1 / Zero $end
$var wire 64 0 Result [63:0] $end
$var wire 1 1 RegWrite $end
$var wire 64 2 PC_offset_branch [63:0] $end
$var wire 64 3 PC_offset_4 [63:0] $end
$var wire 64 4 PC_Out [63:0] $end
$var wire 64 5 PC_In [63:0] $end
$var wire 4 6 Operation [3:0] $end
$var wire 1 7 MemtoReg $end
$var wire 1 8 MemWrite $end
$var wire 1 9 MemRead $end
$var wire 32 : IMem_out [31:0] $end
$var wire 64 ; DMem_Read [63:0] $end
$var wire 1 < Branch $end
$var wire 1 = ALUSrc $end
$var wire 2 > ALUOp [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 >
1=
0<
b1001 ;
b10100001010011010010000011 :
19
08
17
b10 6
b100 5
b0 4
b100 3
b1010000 2
11
b101000 0
0/
b11 .
b1 -
b101000 ,
b101000 +
b11 *
b1001 )
b0 (
b0 '
b1010 &
b1000 %
b1010000 $
b1001 #
1"
0!
$end
#5
1!
#10
b101101100111 '
0!
0"
#15
b1001 '
b1101 (
b10110 #
b10110 0
0=
07
09
b10 >
b1001 +
b10010 $
b110011 *
b0 .
b10101 &
b1001 %
b0 -
b1001 ,
b1000 5
b100110101000010010110011 :
b10110 2
b1000 3
b100 4
1!
#20
0!
#25
b10010111001 '
b10110 (
b10111 #
b10111 0
b1 +
1=
b0 >
b10 $
b10011 *
b1001 &
b1 %
b1 ,
b1100 5
b101001000010010010011 :
b1010 2
b1100 3
b1000 4
1!
#30
0!
#35
b10111 '
b0 (
b0x0100x #
b101000 0
x7
01
18
b101000 +
b1010000 $
b100011 *
b1000 )
b11 .
b1010 &
b1001 %
b1 -
b101000 ,
b10000 5
b10100101010011010000100011 :
b1011100 2
b10000 3
b1100 4
1!
#40
0!
#45
b101101100111 '
b10111 #
b10111 ;
17
11
19
08
b11 *
b1001 )
b1000 %
b10100 5
b10100001010011010010000011 :
b1100000 2
b10100 3
b10000 4
1!
#50
0!
#55
bx '
bx (
bx #
bx 0
0=
07
01
09
bx +
bx0xxx0 $
bx *
bx )
bx .
bx &
bx %
bx -
bx0xxx ,
b11000 5
bx :
bx 2
b11000 3
b10100 4
1!
#60
b10111 ;
b10111 #
1=
17
11
19
b1010000 2
b1010000 $
0/
b101000 0
b11 *
b1001 )
b11 .
b1010 &
b1000 %
b1 -
b101000 ,
b100 5
b101000 +
b10100001010011010010000011 :
b100 3
b0 4
b0 '
b0 (
0!
1"
